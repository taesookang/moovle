{"version":3,"sources":["context/QueryContext.jsx","context/WatchlistContext.jsx","context/Service.jsx","components/Main/Genres/Genres.jsx","hooks/useOutsideClick/index.jsx","components/shared/MovieCard/Modal/Modal.jsx","components/shared/MovieCard/MovieCard.jsx","components/Main/Movielist/NoResult/NoResult.jsx","components/Main/Movielist/Movielist.jsx","components/Main/Main.jsx","components/Header/Header.jsx","components/Watchlist/Watchlist.jsx","App.jsx","index.js"],"names":["QueryContext","createContext","QueryProvider","children","useState","query","setQuery","Provider","value","initialList","localStorage","getItem","JSON","parse","WatchlistContext","WatchlistProvider","props","watchlist","setWatchlist","useEffect","setItem","stringify","addMovieToWatchlist","movie","removeMovieFromWatchlist","id","filter","apiKey","process","url","nowPlayingUrl","topratedUrl","movieUrl","genreUrl","moviesUrl","searchUrl","popularUrl","fetchNowPlaying","page","a","axios","get","params","api_key","language","data","movies","results","fetchGenre","genres","map","genre","name","fetchMovieByGenre","genre_id","with_genres","fetchTopratedMovie","fetchPopularMovies","fetchMovieVideos","fetchSearchedMovies","Genres","selectedGenre","setSelectedGenre","setGenres","genreOpen","setGenreOpen","list","fetchAPI","className","onClick","prev","GenreList","handleGenreClick","useOutsideClick","ref","callback","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","Modal","setModalOpen","movieObj","useContext","video","setVideo","inList","setInList","backdrop","storedMovie","find","o","undefined","videoURL","key","fetchVideo","useRef","console","log","onPlay","playing","width","height","config","youtube","playerVars","controls","iv_load_policy","src","style","alt","title","release","rate","toFixed","overview","MovieCard","modalOpen","release_date","poster","poster_path","vote_average","rateCount","vote_count","backdrop_path","scrollTop","window","pageYOffset","documentElement","scrollLeft","pageXOffset","onscroll","scrollTo","disableScroll","substring","NoResult","Movielist","movieList","setMovieList","currentPage","setCurrentPage","fetchList","fetchMovies","fetchMoreMovies","moreMovies","length","dataLength","hasMore","next","Main","Header","searchOpen","setSearchOpen","isTyping","history","useHistory","refreshHome","location","href","to","push","type","onChange","preventDefault","Watchlist","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7e98e151.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const QueryContext = createContext();\n\nexport function QueryProvider({ children }) {\n  const [query, setQuery] = useState(\"\");\n\n  return (\n    <QueryContext.Provider value={{ query, setQuery }}>\n      {children}\n    </QueryContext.Provider>\n  );\n}\n","import React, { createContext, useEffect, useState } from \"react\";\n\n// Get initial state from local storage\n\nconst initialList = localStorage.getItem(\"watchlist\")\n  ? JSON.parse(localStorage.getItem(\"watchlist\"))\n  : [];\n\n// Create watchlist context for global use\nexport const WatchlistContext = createContext();\n\n// Provider component\nexport const WatchlistProvider = (props) => {\n  const [watchlist, setWatchlist] = useState(initialList);\n\n  useEffect(() => {\n    localStorage.setItem(\"watchlist\", JSON.stringify(watchlist));\n  }, [watchlist]);\n\n  const addMovieToWatchlist = (movie) => {\n    setWatchlist([movie, ...watchlist]);\n  };\n\n  const removeMovieFromWatchlist = (id) => {\n    setWatchlist(watchlist.filter((movie) => movie.id !== id));\n  };\n\n  return (\n    <WatchlistContext.Provider\n      value={{\n        watchlist,\n        setWatchlist,\n        addMovieToWatchlist,\n        removeMovieFromWatchlist,\n      }}\n    >\n      {props.children}\n    </WatchlistContext.Provider>\n  );\n};\n","import axios from \"axios\";\n\nconst apiKey = process.env.REACT_APP_TMDB_KEY;\nconst url = \"https://api.themoviedb.org/3\";\nconst nowPlayingUrl = `${url}/movie/now_playing`;\nconst topratedUrl = `${url}/movie/top_rated`;\nconst movieUrl = `${url}/movie`;\nconst genreUrl = `${url}/genre/movie/list`;\nconst moviesUrl = `${url}/discover/movie`;\nconst searchUrl = `${url}/search/movie`;\nconst popularUrl = `${url}/movie/popular`;\n\nconst fetchNowPlaying = async (page) => {\n  try {\n    const { data } = await axios.get(nowPlayingUrl, {\n      params: {\n        api_key: apiKey,\n        language: \"en_US\",\n        page: page,\n      },\n    });\n\n    const movies = data.results;\n\n    return movies;\n  } catch (err) {\n    return err;\n  }\n};\n\nconst fetchGenre = async () => {\n  try {\n    const { data } = await axios.get(genreUrl, {\n      params: {\n        api_key: apiKey,\n        language: \"en_US\",\n        page: 1,\n      },\n    });\n    const genres = data.genres.map((genre) => ({\n      id: genre.id,\n      name: genre.name,\n    }));\n    return genres;\n  } catch (err) {\n    return err;\n  }\n};\n\nconst fetchMovieByGenre = async (genre_id, page) => {\n  try {\n    const { data } = await axios.get(moviesUrl, {\n      params: {\n        api_key: apiKey,\n        language: \"en_US\",\n        page: page,\n        with_genres: genre_id,\n      },\n    });\n    const movies = data.results;\n\n    return movies;\n  } catch (err) {\n    return err;\n  }\n};\n\nconst fetchTopratedMovie = async (page) => {\n  try {\n    const { data } = await axios.get(topratedUrl, {\n      params: {\n        api_key: apiKey,\n        language: \"en_US\",\n        page: page,\n      },\n    });\n    const movies = data.results;\n\n    return movies;\n  } catch (err) {\n      return err;\n  }\n};\n\nconst fetchPopularMovies = async (page) => {\n  try {\n    const { data } = await axios.get(popularUrl, {\n      params: {\n        api_key: apiKey,\n        language: \"en_US\",\n        page: page,\n      },\n    });\n    const movies = data.results;\n\n    return movies;\n  } catch (err) {\n      return err\n  }\n};\n\nconst fetchMovieVideos = async (id) => {\n  try {\n    const { data } = await axios.get(`${movieUrl}/${id}/videos`, {\n      params: {\n        api_key: apiKey,\n      },\n    });\n\n    return data.results[0];\n  } catch (err) {\n    return err;\n  }\n};\n\nconst fetchSearchedMovies = async (query, page) => {\n  try {\n    const { data } = await axios.get(searchUrl, {\n      params: {\n        api_key: apiKey,\n        language: \"en_US\",\n        page: page,\n        query: query,\n      },\n    });\n\n    const movies = data.results;\n\n    return movies;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport {\n  fetchNowPlaying,\n  fetchGenre,\n  fetchMovieByGenre,\n  fetchTopratedMovie,\n  fetchMovieVideos,\n  fetchSearchedMovies,\n  fetchPopularMovies,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchGenre } from \"../../../context/Service\";\nimport { IoChevronDown } from \"react-icons/io5\";\n\nexport default function Genres({ selectedGenre, setSelectedGenre }) {\n  const [genres, setGenres] = useState([\n    { id: 1, name: \"Now Playing\" },\n    { id: 2, name: \"Popular\" },\n    { id: 3, name: \"Top Rated\" },\n  ]);\n  const [genreOpen, setGenreOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const list = await fetchGenre();\n      setGenres((genres) => [...genres, ...list]);\n    };\n    fetchAPI();\n  }, []);\n\n  return (\n    <div className=\"genres\">\n      <div className=\"genres__menu\">\n        <span>{selectedGenre.name}</span>\n        <IoChevronDown\n          onClick={() => setGenreOpen((prev) => !prev)}\n          className={`genres__button ${genreOpen && \"open\"}`}\n        />\n      </div>\n      <div className={`genres__container ${genreOpen && \"open\"}`}>\n        <GenreList\n          genres={genres}\n          setGenreOpen={setGenreOpen}\n          setSelectedGenre={setSelectedGenre}\n          genreOpen={genreOpen}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction GenreList({ genres, genreOpen, setGenreOpen, setSelectedGenre }) {\n  const handleGenreClick = (genre) => {\n    setGenreOpen(false);\n    setSelectedGenre(genre);\n  };\n\n  return (\n    <div className=\"genrelist\">\n      {genres.map((genre) => (\n        <div\n          className={`genre ${genreOpen && \"open\"}`}\n          key={genre.id}\n          onClick={() => handleGenreClick(genre)}\n        >\n          {genre.name}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\n\n// This is a custom hook that enables to close the modal\n// when the user clicks on anywhere outside the modal.\n\nconst useOutsideClick = (ref, callback) => {\n  // if click point is not in refered div, do callback.\n  const handleClick = e => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    // Add click event listener to the whole document\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n};\n\nexport default useOutsideClick;","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { CgClose, CgHeart } from \"react-icons/cg\";\nimport { FaStar, FaVideoSlash } from \"react-icons/fa\";\nimport { fetchMovieVideos } from \"../../../../context/Service\";\nimport ReactPlayer from \"react-player\";\nimport useOutsideClick from \"../../../../hooks/useOutsideClick\";\nimport { WatchlistContext } from \"../../../../context/WatchlistContext\";\n\nexport default function Modal({ movie, setModalOpen, movieObj }) {\n  const youtubeUrl = \"https://www.youtube.com/embed/\";\n  const backdropUrl = \"https://image.tmdb.org/t/p/w780/\";\n  const { addMovieToWatchlist, removeMovieFromWatchlist, watchlist } =\n    useContext(WatchlistContext);\n\n  const [video, setVideo] = useState(\"\");\n  const [inList, setInList] = useState(false);\n  const backdrop = movie.backdrop !== null && backdropUrl + movie.backdrop;\n  let storedMovie = watchlist.find((o) => o.id === movie.id);\n\n  useEffect(() => {\n    const fetchVideo = async () => {\n      const videoURL = await fetchMovieVideos(movie.id);\n\n      videoURL !== undefined && setVideo(youtubeUrl + videoURL.key);\n    };\n\n    fetchVideo();\n    storedMovie && setInList(true);\n  }, [movie.id, storedMovie]);\n\n  const ref = useRef();\n\n  useOutsideClick(ref, () => {\n    setModalOpen(false);\n  });\n\n  console.log(movie);\n\n  const handleLikes = () => {\n    inList ? removeMovieFromWatchlist(movie.id) : addMovieToWatchlist(movieObj);\n    setInList((prev) => !prev);\n  };\n\n  return (\n    <div className=\"modal\" ref={ref}>\n      <CgClose className=\"modal__close\" onClick={() => setModalOpen(false)} />\n      <div className=\"modal__container\">\n        <div className=\"modal__video\">\n          {/* if video has null value => place backdrop image instead */}\n          {/* if both video and backdrop image aren't available => render dummy image with a message */}\n          {video !== \"\" ? (\n            <ReactPlayer\n              className=\"video\"\n              url={video}\n              onPlay={() => {}}\n              playing={true}\n              width=\"100%\"\n              height=\"100%\"\n              config={{\n                youtube: {\n                  playerVars: {\n                    controls: 1,\n                    iv_load_policy: 3,\n                  },\n                },\n              }}\n            ></ReactPlayer>\n          ) : backdrop ? (\n            <>\n              <img\n                className=\"filler-video\"\n                src={backdrop}\n                style={{ width: \"100%\", height: \"auto\" }}\n                alt=\"\"\n              />\n            </>\n          ) : (\n            <div className=\"no-video\">\n              <FaVideoSlash />\n              <h3> No trailer available </h3>\n            </div>\n          )}\n        </div>\n        <div className=\"modal__content\">\n          <div className=\"content\">\n            <div className=\"title\">{movie.title}</div>\n            <div className=\"info\">\n              {movie.release !== \"\" && (\n                <div className=\"release\">{movie.release}</div>\n              )}\n              {movie.rate !== 0 && (\n                <div className=\"rate\">\n                  <FaStar />\n                  {movie.rate.toFixed(1)}\n                </div>\n              )}\n            </div>\n            <div className=\"line\" />\n            <div className=\"overview\">{movie.overview}</div>\n          </div>\n          <div className=\"add-btn\">\n            <button className={inList ? \"in-list\" : undefined} onClick={handleLikes}>\n              <CgHeart />\n              <span>\n                {inList ? \"Remove from Watchlist\" : \"Add to Watchlist\"}\n              </span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Modal from \"./Modal/Modal\";\n\nexport default function MovieCard({ movieObj }) {\n  const [modalOpen, setModalOpen] = useState(false);\n  const movie = {\n    id: movieObj.id,\n    title: movieObj.title,\n    release: movieObj.release_date,\n    overview: movieObj.overview,\n    poster: movieObj.poster_path,\n    rate: movieObj.vote_average,\n    rateCount: movieObj.vote_count,\n    backdrop: movieObj.backdrop_path\n  };\n  const posterUrl = \"https://image.tmdb.org/t/p/w200\";\n  const poster = posterUrl + movie.poster;\n\n  useEffect(() => {\n    modalOpen ? disableScroll() : enableScroll();\n  }, [modalOpen])\n\n\n  // Disable scroll when modal is open.\n  // reference >> https://www.geeksforgeeks.org/how-to-disable-scrolling-temporarily-using-javascript/\n  \n  function disableScroll() {\n    // Get the current page scroll position\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollLeft =\n      window.pageXOffset || document.documentElement.scrollLeft;\n    // if any scroll is attempted, set this to the previous value\n    window.onscroll = function () {\n      window.scrollTo(scrollLeft, scrollTop);\n    };\n  }\n\n  function enableScroll() {\n    window.onscroll = function () {};\n  }\n\n\n\n  return (\n    <>\n      <div className=\"card\">\n        <div\n          className={`card__poster ${movie.poster === null && \"notfound\"}`}\n          onClick={() => setModalOpen((prev) => !prev)}\n        >\n          <img src={movie.poster !== null ? poster : `${process.env.PUBLIC_URL + '/images/logo.png'}`} alt=\"\" />\n        </div>\n        <div className=\"card__title\">{movie.title}</div>\n        <div className=\"card__release\">\n          {movie.release ? movie.release.substring(0, 4) : \"-\"}\n        </div>\n      </div>\n      {modalOpen && (\n        <Modal\n          movie={movie}\n          setModalOpen={setModalOpen}\n          movieObj={movieObj}\n        />\n      )}\n    </>\n  );\n}\n","import React from 'react'\nimport {FaRegSadTear} from 'react-icons/fa'\n\nexport default function NoResult() {\n    return (\n        <div className=\"no-result\">\n            <FaRegSadTear />\n            <h1>No results found.</h1>\n            <span>Try searching for something else.</span>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport MovieCard from \"../../shared/MovieCard/MovieCard\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {\n  fetchMovieByGenre,\n  fetchNowPlaying,\n  fetchPopularMovies,\n  fetchTopratedMovie,\n  fetchSearchedMovies,\n} from \"../../../context/Service\";\nimport { QueryContext } from \"../../../context/QueryContext\";\nimport NoResult from \"./NoResult/NoResult\";\n\nexport default function Movielist({ selectedGenre }) {\n  const [movieList, setMovieList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const { query } = useContext(QueryContext);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      query !== \"\"\n        ? setMovieList(await fetchSearchedMovies(query, 1))\n        : setMovieList(await fetchList(selectedGenre.id, 1));\n    };\n\n    fetchMovies();\n  }, [selectedGenre, query]);\n\n  const fetchList = async (id, page) => {\n    let list = [];\n    switch (id) {\n      case 1:\n        list = await fetchNowPlaying(page);\n        break;\n      case 2:\n        list = await fetchPopularMovies(page);\n        break;\n      case 3:\n        list = await fetchTopratedMovie(page);\n        break;\n      default:\n        list = await fetchMovieByGenre(id, page);\n        break;\n    }\n\n    return list;\n  };\n\n  // console.log(movieList);\n\n  const fetchMoreMovies = async (id, page) => {\n    let moreMovies =\n      query !== \"\"\n        ? await fetchSearchedMovies(query, page)\n        : await fetchList(id, page);\n    setCurrentPage((prev) => prev + 1);\n    setMovieList((prev) => [...prev, ...moreMovies]);\n  };\n\n  return movieList.length !== 0 ? (\n    <InfiniteScroll\n      className={\"movielist\"}\n      dataLength={movieList.length}\n      hasMore={true}\n      next={() => fetchMoreMovies(selectedGenre.id, currentPage + 1)}\n    >\n      {movieList.map((movie) => (\n        <MovieCard movieObj={movie} key={movie.id} />\n      ))}\n    </InfiniteScroll>\n  ) : query !== \"\" && (\n    <NoResult />\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { QueryContext } from \"../../context/QueryContext\";\nimport Genres from \"./Genres/Genres\";\nimport Movielist from \"./Movielist/Movielist\";\n\nexport default function Main() {\n  const { query } = useContext(QueryContext);\n  const [selectedGenre, setSelectedGenre] = useState({\n    id: 1,\n    name: \"Now Playing\",\n  });\n  return (\n    <div className=\"main\">\n      <div className=\"main__container\">\n        {query === \"\" ? (\n          <Genres\n            selectedGenre={selectedGenre}\n            setSelectedGenre={setSelectedGenre}\n          />\n        ) : (\n          <h2 className=\"query-result\">\n            Results with <span>\"{query}\"</span>\n          </h2>\n        )}\n        <Movielist selectedGenre={selectedGenre} />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CgSearch, CgHeart } from \"react-icons/cg\";\nimport { RiHome2Line } from \"react-icons/ri\";\nimport { QueryContext } from \"../../context/QueryContext\";\nimport { WatchlistContext } from \"../../context/WatchlistContext\";\n\nexport default function Header() {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const { query, setQuery } = useContext(QueryContext);\n  const { watchlist } = useContext(WatchlistContext);\n  const isTyping = query !== \"\";\n  const history = useHistory();\n\n  const handleSearchClick = () => {\n    history.push(\"/\");\n    setSearchOpen((prev) => !prev);\n\n    // reset value of search input text to empty string when search bar is closed.\n    const emptyInputValue = () => {\n      setQuery(\"\");\n    };\n    searchOpen && emptyInputValue();\n  };\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setQuery(e.target.value);\n  };\n\n  const refreshHome = () => {\n    window.location.href=\"/\";\n  }\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__container\">\n        <Link to=\"/\" onClick={refreshHome}>\n          <div className=\"logo\">\n            <img src={process.env.PUBLIC_URL + \"/images/logo.png\"} alt=\"\" />\n            <h2>Moovle</h2>\n          </div>\n        </Link>\n        <div className=\"menu\">\n          <div className={`menu__search ${searchOpen && \"open\"}`}>\n            <CgSearch onClick={handleSearchClick} />\n            <input\n              className=\"menu__search__input\"\n              type=\"text\"\n              value={query}\n              onChange={handleChange}\n            />\n            <div className={`menu__search__cancel ${isTyping && \"visible\"}`} onClick={() => setQuery(\"\")}>&#10005;</div>\n          </div>\n          <Link to=\"/\" onClick={refreshHome}>\n            <div className=\"menu__home\">\n              <RiHome2Line />\n            </div>\n          </Link>\n          <Link to=\"/watchlist\" onClick={() => setSearchOpen(false)}>\n            <div className=\"menu__watchlist\">\n              <CgHeart />\n              <div className=\"indicator\">{watchlist.length}</div>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { WatchlistContext } from \"../../context/WatchlistContext\";\nimport MovieCard from '../shared/MovieCard/MovieCard'\n\nexport default function Watchlist() {\n  const { watchlist } = useContext(WatchlistContext);\n\n\n  return (\n    <div className=\"watchlist\">\n      <div className=\"watchlist__label\">\n        <h2>My Watchlist</h2>\n        <p> You have {watchlist.length} {`${watchlist.length > 1 ? 'movies': 'movie'}`} to watch</p>\n      </div>\n      <div className=\"watchlist__container\">\n        <div className=\"watchlist__list\">\n          {\n            watchlist.map((movie) => (\n              <MovieCard movieObj={movie} key={movie.id}/>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { QueryProvider } from \"./context/QueryContext\";\nimport { WatchlistProvider } from \"./context/WatchlistContext\";\nimport Main from \"./components/Main/Main\";\nimport Header from \"./components/Header/Header\";\nimport Watchlist from \"./components/Watchlist/Watchlist\";\n\nfunction App() {\n  return (\n    <WatchlistProvider>\n      <QueryProvider>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/watchlist\" component={Watchlist} />\n            <Route path=\"/\" component={Main} />\n          </Switch>\n        </Router>\n      </QueryProvider>\n    </WatchlistProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './scss/index.scss'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}